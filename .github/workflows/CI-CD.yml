name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main

jobs:
  # Build and Test Job
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-app:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/weather-app:latest

  # Deploy job (only on main branch)
  deploy:
    if: github.ref == 'refs/heads/main'  # Only run this job on the main branch
    runs-on: ubuntu-latest
    needs: build  # Deploy depends on successful build

    steps:
    - name: SSH into EC2 instance
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker pull ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
          docker stop weather-app || true
          docker rm weather-app || true
          docker run -d -p 80:5000 --name weather-app ${{ secrets.DOCKER_USERNAME }}/weather-app:latest